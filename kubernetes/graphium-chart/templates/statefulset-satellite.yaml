{{- if gt .Values.graphiumSatellite.replicaCount 0.0 -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-satellite
  labels:
    app: {{ .Release.Name }}-satellite
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8080
  selector:
    app: {{ .Release.Name }}-satellite

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-satellite
spec:
  serviceName: {{ .Release.Name }}-satellite
  replicas: {{ .Values.graphiumSatellite.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-satellite
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-satellite
    spec:
      volumes:
        - name: postgis-init
          configMap:
            name: {{ .Release.Name }}-postgis-init
      containers:
        - name: {{ .Release.Name }}-satellite
          image: {{ .Values.graphiumSatellite.image }}
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: "db.url"
              value: "jdbc:postgresql://localhost:5432/{{ .Values.database.postgresDb }}"
            - name: "db.username"
              value: "{{ .Values.database.postgresUser }}"
            - name: "db.password"
              value: "{{ .Values.database.postgresPassword }}"
        - name: {{ .Release.Name }}-satellite-db
          image: {{ .Values.database.image }}
          ports:
            - containerPort: 5432
              name: postgis
          env:
            - name: POSTGRES_USER
              value: {{ .Values.database.postgresUser }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.database.postgresPassword }}
            - name: POSTGRES_DB
              value: {{ .Values.database.postgresDb }}
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
            - name: postgis-init
              mountPath: "/docker-entrypoint-initdb.d/"
    volumeClaimTemplates:
      - metadata:
          name: pgdata
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: {{ .Values.database.volumeSize }}
  {{- end }}